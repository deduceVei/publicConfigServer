
spring:
  profiles:
    active: dev

---
server:
  port: 80333
  tomcat:
    uri-encoding: UTF-8
spring:
  profiles: dev
  application:
    name: miscroservice-provider
  datasource:
    url: jdbc:mysql://localhost:3306/cloudbprovider?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=GMT%2B8
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    druid:
      filters: config,stat
      initialSize: 1
      min-idle: 5
      max-active: 10
      maxWait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      poolPreparedStatements: false
      maxPoolPreparedStatementPerConnectionSize: 500
      maxOpenPreparedStatements: 500
      connectionProperties: druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true;config.decrypt=false
      filter:
        wall:
          config:
            multi-statement-allow: true


mybatis:
  #注意：一定要对应mapper映射xml文件的所在路径
  mapper-locations: classpath:mybatis/mapping/*.xml
  # 注意：对应实体类的路径/model扫描的包名
  type-aliases-package: com.deduce.providerconfig.model
  config-location: classpath:mybatis/mybatis-config.xml

eureka:
  client:
    #将自己注册到这些位置
    service-url:
      defaultZone: http://${peer1.server.host}:${peer1.server.port}/eureka/, http://${peer2.server.host}:${peer2.server.port}/eureka/
  instance:
    #自定义的服务名称-status(UP)后的标识符
    instance-id: provider-8003-hystrix
    ip-address: true
peer1:
  server:
    host: eureka1
    port: 8101

peer2:
  server:
    host: eureka2
    port: 8102



---
server:
  port: 80444
  tomcat:
    uri-encoding: UTF-8
spring:
  profiles: dev
  application:
    name: miscroservice-provider
  datasource:
    url: jdbc:mysql://localhost:3306/cloudbprovider?nullCatalogMeansCurrent=true&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=GMT%2B8
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    druid:
      filters: config,stat
      initialSize: 1
      min-idle: 5
      max-active: 10
      maxWait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      poolPreparedStatements: false
      maxPoolPreparedStatementPerConnectionSize: 500
      maxOpenPreparedStatements: 500
      connectionProperties: druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true;config.decrypt=false
      filter:
        wall:
          config:
            multi-statement-allow: true


mybatis:
  #注意：一定要对应mapper映射xml文件的所在路径
  mapper-locations: classpath:mybatis/mapping/*.xml
  # 注意：对应实体类的路径/model扫描的包名
  type-aliases-package: com.deduce.providerconfig.model
  config-location: classpath:mybatis/mybatis-config.xml


#actuator端口
#http://localhost:9003/monitor/health
management:
  endpoint:
    health:
      #显示健康具体信息  默认不会显示详细信息
      show-details: always
  endpoints:
    web:
      #修改访问路径  2.0之前默认是/   2.0默认是 /actuator  可以通过这个属性值修改
      base-path: /monitor
      exposure:
        #开放所有页面节点  默认只开启了health、info两个节点
        include: '*'
  server:
    port: 9003

eureka:
  client:
    #将自己注册到这些位置
    service-url:
      defaultZone: http://${peer1.server.host}:${peer1.server.port}/eureka/, http://${peer2.server.host}:${peer2.server.port}/eureka/
  instance:
    #自定义的服务名称-status(UP)后的标识符
    instance-id: provider-8003-hystrix
    ip-address: true
peer1:
  server:
    host: eureka1
    port: 8101

peer2:
  server:
    host: eureka2
    port: 8102